generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  externalUserId String @unique
  username       String @unique
  imageUrl       String

  subscribedTo Subscription[] @relation("SubscribedBy")
  subscribedBy Subscription[] @relation("SubscribedTo")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  banned   Ban[] @relation("BannedBy")
  bannedBy Ban[] @relation("Banned")
}

model Subscription {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  userId       String @db.ObjectId
  subscriberId String @db.ObjectId

  user       User @relation(name: "SubscribedTo", fields: [userId], references: [id], onDelete: Cascade)
  subscriber User @relation(name: "SubscribedBy", fields: [subscriberId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@unique([userId, subscriberId])
}

model Ban {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  userId   String @db.ObjectId
  bannedId String @db.ObjectId

  user       User @relation(name: "BannedBy", fields: [userId], references: [id], onDelete: Cascade)
  bannedUser User @relation(name: "Banned", fields: [bannedId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@unique([userId, bannedId])
}
